pipeline {
    agent any

    environment {
        AWS_CREDS = credentials('aws-creds')
    }

    parameters {
        string(name: 'ACTION', defaultValue: 'apply', description: 'Terraform action: apply or destroy')    
    }

    stages {
        stage('Checkout from Git') {
            steps {
                echo 'git checkout'
            }
        }

        stage('Terraform version') {
            steps {
                sh 'terraform --version'
            }
        }

        stage('Terraform init') {
            steps {
                dir('eks-terraform') {
                    withEnv([
                        "AWS_ACCESS_KEY_ID=${AWS_CREDS_USR}",
                        "AWS_SECRET_ACCESS_KEY=${AWS_CREDS_PSW}"
                    ]) {
                        sh 'terraform init --reconfigure'
                    }
                }
            }
        }

        stage('Terraform validate') {
            steps {
                dir('eks-terraform') {
                    withEnv([
                        "AWS_ACCESS_KEY_ID=${AWS_CREDS_USR}",
                        "AWS_SECRET_ACCESS_KEY=${AWS_CREDS_PSW}"
                    ]) {
                        sh 'terraform validate'
                    }
                }
            }
        }

        stage('Terraform plan') {
            steps {
                dir('eks-terraform') {
                    withEnv([
                        "AWS_ACCESS_KEY_ID=${AWS_CREDS_USR}",
                        "AWS_SECRET_ACCESS_KEY=${AWS_CREDS_PSW}"
                    ]) {
                        sh 'terraform plan'
                    }
                }
            }
        }

        stage('Terraform apply/destroy') {
            steps {
                dir('eks-terraform') {
                    withEnv([
                        "AWS_ACCESS_KEY_ID=${AWS_CREDS_USR}",
                        "AWS_SECRET_ACCESS_KEY=${AWS_CREDS_PSW}"
                    ]) {
                        sh "terraform ${params.ACTION} -auto-approve"
                    }
                }
            }
        }
    }
}
